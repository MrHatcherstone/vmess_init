---
- name: Read config JSON
  slurp:
    src: "{{ vmess_config_file_path }}"
  register: users_json_raw

- name: Decode JSON
  set_fact:
    raw_json: "{{ users_json_raw.content | b64decode | from_json }}"

- name: Extract clients
  set_fact:
    users: "{{ raw_json.inbounds[0].settings.clients }}"

- name: Check if user with same email exists
  fail:
    msg: "Client with email {{ email }} already exists"
  when: users | selectattr('email', 'equalto', email) | list | length > 0

- name: Generate UUID for new client
  command: uuidgen
  register: new_uuid
  changed_when: false

- name: Add new client to config
  set_fact:
    updated_users: "{{ (users + [ {'id': new_uuid.stdout, 'email': email} ]) | sort(attribute='email') }}"

- name: Update JSON
  set_fact:
    raw_json: "{{ raw_json | combine({'inbounds': [ raw_json.inbounds[0] | combine({'settings': raw_json.inbounds[0].settings | combine({'clients': updated_users}) }) ]}) }}"

- name: Write new JSON
  copy:
    content: "{{ raw_json | to_nice_json }}"
    dest: "{{ vmess_config_file_path }}"
    backup: yes

- name: Restart docker-compose
  community.docker.docker_compose_v2:
    project_src: "{{ docker_compose_dir }}"
    state: restarted