---
- name: Read config JSON
  ansible.builtin.slurp:
    src: "{{ vmess_config_file_path }}"
  register: users_json_raw

- name: Decode JSON
  ansible.builtin.set_fact:
    raw_json: "{{ users_json_raw.content | b64decode | from_json }}"

- name: Extract clients
  ansible.builtin.set_fact:
    users: "{{ raw_json.inbounds[0].settings.clients }}"

- name: Check if user with same email exists
  ansible.builtin.fail:
    msg: "No client with email {{ email }} found"
  when: users | selectattr('email', 'equalto', email) | list | length == 0

- name: Delete client with matched email
  ansible.builtin.set_fact:
    updated_users: "{{ users | rejectattr('email', 'equalto', email) | sort(attribute='email') | list }}"

- name: Update JSON
  ansible.builtin.set_fact:
    raw_json: >-
      {{ raw_json
         | combine({
             'inbounds': [
               raw_json.inbounds[0]
               | combine({
                   'settings': raw_json.inbounds[0].settings
                   | combine({
                       'clients': updated_users
                   })
               })
             ]
         })
      }}

- name: Write new JSON
  ansible.builtin.copy:
    content: "{{ raw_json | to_nice_json }}"
    dest: "{{ vmess_config_file_path }}"
    backup: true
    owner: root
    group: root
    mode: '0644'

- name: Restart docker-compose
  community.docker.docker_compose_v2:
    project_src: "{{ docker_compose_dir }}"
    state: restarted
